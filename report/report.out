\BOOKMARK [1][]{section*.2}{Contents}{}% 1
\BOOKMARK [1][]{section*.4}{List of Figures}{}% 2
\BOOKMARK [0][]{section*.4}{Nomenclature}{}% 3
\BOOKMARK [1][]{section.1}{1 System Call interceptor}{section*.4}% 4
\BOOKMARK [1][]{section.2}{2 State of art in the system call interceptor}{section*.4}% 5
\BOOKMARK [1][]{section.3}{3 \040Issues}{section*.4}% 6
\BOOKMARK [1][]{section.4}{4 Requirements}{section*.4}% 7
\BOOKMARK [1][]{section.5}{5 Design goal}{section*.4}% 8
\BOOKMARK [1][]{section.6}{6 Ptrace tracing mechanism}{section*.4}% 9
\BOOKMARK [1][]{section.7}{7 System call virtualization}{section*.4}% 10
\BOOKMARK [1][]{section.8}{8 Memory access}{section*.4}% 11
\BOOKMARK [1][]{section.9}{9 Multi thread applications}{section*.4}% 12
\BOOKMARK [1][]{section.10}{10 Aborting a system call}{section*.4}% 13
\BOOKMARK [1][]{section.11}{11 Conclusion}{section*.4}% 14
\BOOKMARK [1][]{section.12}{12 Utrace}{section*.4}% 15
\BOOKMARK [2][]{subsection.12.1}{12.1 Setting up a System call interceptor mechanism using Utrace}{section.12}% 16
\BOOKMARK [1][]{section.13}{13 Kernel hybrid interposition architecture}{section*.4}% 17
\BOOKMARK [1][]{section.14}{14 Kernel delegating architecture}{section*.4}% 18
\BOOKMARK [1][]{section.15}{15 Kernel Probes}{section*.4}% 19
\BOOKMARK [2][]{subsection.15.1}{15.1 System call interceptor using kernel probes}{section.15}% 20
\BOOKMARK [1][]{section*.6}{References}{section*.4}% 21
