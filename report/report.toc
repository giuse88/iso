\select@language {english}
\contentsline {chapter}{\numberline {1}Introduction}{1}
\contentsline {section}{\numberline {1.1}System Call interceptor}{1}
\contentsline {section}{\numberline {1.2}State of art in system call interposition}{2}
\contentsline {section}{\numberline {1.3}Requirements}{3}
\contentsline {section}{\numberline {1.4}Issues}{4}
\contentsline {section}{\numberline {1.5}Design goal}{4}
\contentsline {chapter}{\numberline {2}Ptrace}{5}
\contentsline {section}{\numberline {2.1}Ptrace tracing mechanism}{6}
\contentsline {section}{\numberline {2.2}System call virtualization}{9}
\contentsline {section}{\numberline {2.3}Memory access}{10}
\contentsline {section}{\numberline {2.4}Multi thread applications}{12}
\contentsline {section}{\numberline {2.5}Aborting a system call}{13}
\contentsline {chapter}{\numberline {3}Kernel-based tracing mechanisms}{14}
\contentsline {section}{\numberline {3.1}Utrace}{15}
\contentsline {subsection}{\numberline {3.1.1}Setting up a System call interceptor mechanism using Utrace}{16}
\contentsline {section}{\numberline {3.2}Kernel hybrid interposition architecture}{17}
\contentsline {section}{\numberline {3.3}Kernel delegating architecture}{19}
\contentsline {section}{\numberline {3.4}Kernel Probes}{20}
\contentsline {subsection}{\numberline {3.4.1}System call interceptor using kernel probes}{21}
\contentsline {section}{\numberline {3.5}Seccomb-bpf}{21}
\contentsline {chapter}{\numberline {4}Binary Rewriting}{22}
\contentsline {section}{\numberline {4.1}Static binary rewriting}{24}
\contentsline {section}{\numberline {4.2}Dynamic binary rewriting}{27}
\contentsline {section}{\numberline {4.3}Seccomp}{29}
\contentsline {subsection}{\numberline {4.3.1}Seccomp mode strict}{30}
\contentsline {subsection}{\numberline {4.3.2}Seccomp mode filter}{34}
\contentsline {chapter}{\numberline {A}Appendix Linux System Call}{35}
\contentsline {chapter}{\numberline {B}Executable and Linkable Format}{36}
